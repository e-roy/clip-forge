name: Build and Release

on:
  release:
    types: [published]
  workflow_dispatch:

jobs:
  build:
    runs-on: ${{ matrix.os }}

    strategy:
      matrix:
        include:
          - os: windows-latest
            platform: win32
            arch: x64
          - os: macos-latest
            platform: darwin
            arch: x64
          - os: ubuntu-latest
            platform: linux
            arch: x64

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "20"
          cache: "npm"

      - name: Install dependencies
        run: npm ci

      - name: Build application
        run: npm run build:app
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: ClipForge-${{ matrix.platform }}-${{ matrix.arch }}
          path: |
            release/*/ClipForge-*.*
            release/*/latest.yml
          retention-days: 30

      - name: Create GitHub Release Assets (Windows only)
        if: matrix.os == 'windows-latest'
        uses: softprops/action-gh-release@v1
        with:
          files: |
            release/*/ClipForge-Windows-*.exe
            release/*/latest.yml
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Create GitHub Release Assets (macOS only)
        if: matrix.os == 'macos-latest'
        uses: softprops/action-gh-release@v1
        with:
          files: |
            release/*/ClipForge-Mac-*.dmg
            release/*/latest-mac.yml
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Create GitHub Release Assets (Linux only)
        if: matrix.os == 'ubuntu-latest'
        uses: softprops/action-gh-release@v1
        with:
          files: |
            release/*/ClipForge-Linux-*.AppImage
            release/*/latest-linux.yml
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
